Tricycle Fare Optimizer - Project Structure
=============================================

Main Project Files:
-------------------
ml/
â”œâ”€â”€ index.html                     # Main frontend HTML page
â”œâ”€â”€ style.css                      # Responsive CSS styling
â”œâ”€â”€ app.js                         # Frontend JavaScript application
â”œâ”€â”€ vercel.json                    # Vercel deployment configuration
â”œâ”€â”€ .gitignore                     # Git ignore rules
â”‚
â”œâ”€â”€ README.md                      # Comprehensive documentation
â”œâ”€â”€ QUICKSTART.md                  # Quick start guide
â”œâ”€â”€ PROJECT_SUMMARY.md             # Project deliverables summary
â”œâ”€â”€ STRUCTURE.txt                  # This file - project structure
â”œâ”€â”€ LICENSE                        # MIT License
â”‚
â”œâ”€â”€ setup.bat                      # Windows setup script
â”œâ”€â”€ setup.sh                       # Linux/Mac setup script (chmod +x first)
â”œâ”€â”€ train_model.py                 # Model training script
â”œâ”€â”€ sample_data_generator.py       # Generate synthetic data
â”œâ”€â”€ test_api.py                    # API testing script
â”‚
â””â”€â”€ backend/                       # Backend API directory
    â”œâ”€â”€ app.py                     # Flask REST API application
    â”œâ”€â”€ model.pkl                  # Trained ML model (TO BE ADDED)
    â”œâ”€â”€ requirements.txt           # Python dependencies
    â”œâ”€â”€ .gitignore                 # Backend-specific ignores
    â”‚
    â”œâ”€â”€ README.md                  # Backend documentation
    â”œâ”€â”€ render.yaml                # Render.com deployment config
    â”œâ”€â”€ railway.json               # Railway.app deployment config
    â””â”€â”€ Procfile                   # Process file for deployment


Quick Start Commands:
--------------------

SETUP (Windows):
    setup.bat

SETUP (Linux/Mac):
    chmod +x setup.sh
    ./setup.sh

GENERATE SAMPLE DATA:
    py sample_data_generator.py        (Windows)
    python3 sample_data_generator.py   (Linux/Mac)

TRAIN MODEL:
    py train_model.py                  (Windows)
    python3 train_model.py             (Linux/Mac)

START BACKEND:
    cd backend
    venv\Scripts\activate              (Windows)
    source venv/bin/activate           (Linux/Mac)
    py app.py                          (Windows)
    python3 app.py                     (Linux/Mac)

OPEN FRONTEND:
    Open index.html in your browser
    Or run: python -m http.server 8000

TEST API:
    py test_api.py                     (Windows)
    python3 test_api.py                (Linux/Mac)


Key Features Implemented:
-------------------------
âœ… Interactive Leaflet map with OpenStreetMap
âœ… GPS location detection
âœ… Draggable origin marker (blue)
âœ… Click-to-set destination marker (red)
âœ… OSRM routing for accurate road distances
âœ… Automatic route calculation and display
âœ… Fare prediction form with validation
âœ… Flask REST API with /predict endpoint
âœ… Complete error handling
âœ… Mobile-responsive design
âœ… Deployment configurations for Vercel & backend hosts
âœ… Comprehensive documentation
âœ… Setup and testing scripts


Required Before Running:
------------------------
1. Python 3.8+ installed
2. Modern web browser
3. Internet connection
4. model.pkl file in backend/ directory
   - Generate sample data and train model, OR
   - Add your own trained model.pkl


API Endpoints:
-------------
GET  /              - Health check
GET  /health        - Detailed health status
POST /predict       - Predict tricycle fare


Dataset Format:
--------------
CSV with columns:
- Distance_km (float)
- Fuel_Price (string: "20-29", "30-39", etc.)
- Time_of_Day (string: "Rush Hour Morning", "Off-Peak", "Rush Hour Evening")
- Weather (string: "Sunny", "Rainy")
- Vehicle_Type (string: "Single Motor", "Tricycle")
- Actual_Fare_PHP (float - target variable)


Deployment:
----------
Frontend: Vercel (automatic from Git)
Backend: Render.com, Railway.app, or PythonAnywhere
See README.md for detailed deployment instructions


Documentation:
-------------
- README.md          - Full project documentation
- QUICKSTART.md      - 5-minute setup guide
- PROJECT_SUMMARY.md - Deliverables checklist
- backend/README.md  - Backend API documentation
- Code comments      - Throughout all source files


Support:
-------
- Check README.md for troubleshooting
- Review QUICKSTART.md for common issues
- See backend/README.md for API details
- All code is heavily commented


Built for Tagum City ðŸ›º
========================
